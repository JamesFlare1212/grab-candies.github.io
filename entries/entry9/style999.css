@font-face {
  font-family: Abril Fatface;
  src: url(./fonts/Abril_Fatface/AbrilFatface-Regular.ttf);
}
@font-face {
  font-family: Poppins;
  src: url(./fonts/Poppins/Poppins-Regular.ttf);
}
@font-face {
  font-family: Notable;
  src: url(./fonts/Notable/Notable-Regular.ttf);
}

/* 全局样式 */
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #000;
}

.navbar {
  display: flex;
  justify-content: center;
  position: fixed; /* Keeps the navbar fixed at the top */
  top: 0;
  width: 100%;
  margin-top: 0; /* Remove margin-top */
  padding: 20px 0; /* Add padding if needed */
}

.nav-logo {
  max-width: 50px; /* Adjust the size of the image */
  height: auto;
  cursor: pointer;
}

.nav-logo:hover {
  opacity: 0.8; /* Optional hover effect */
  transform: scale(0.8);
  transition: transform 0.3s ease-in-out;
}
/* 容器样式 */
.candy-container {
  position: relative; /* 添加相对定位 */
  display: inline-block;
}

/* 糖果图片样式 */
.candy {
  width: 150px;
  height: auto;
  transition: transform 0.3s ease;
  cursor: pointer; /* 添加指针样式 */
}
.candy:hover {
  transform: scale(1.5);
}
span {
  /* 这里可以直接使用外部引入的字体样式 */

  color: #fff;
  align-items: center;
  justify-content: center;
  /* 这是字体的描边第一个值是粗细,第二个值是颜色 */
  -webkit-text-stroke: 3px #000;
  /* 单词大写 */
  text-transform: uppercase;
  /* 文字阴影 */
  text-shadow: 0 0 #f3c623, 0 0 #f2aaaa;
  /* 让文字先向下走自身高度的50%,然后顺时针旋转4度 */
  transform: translate(0, 50%) rotate(4deg);
  /* 动画 名称 时长 第三个值是延迟时长 calc是自动计算的方法,里面写的var()函数是会调用我们事先自定义好的属性值,我们刚才给span添加的--i:*就是一个自定义属性,var()能调用到相应的span的定义好的属性值,然后在*120ms来计算每个文字的延迟时长省时省力,第四个值是两头慢,中间快,第五个值是无线运动 */
  animation: move 5s calc(var(--i) * 120ms) ease-in-out infinite;
}
/* 悬停字符样式 */
.emotion {
  font-family: "Abril Fatface", sans-serif;
  font-size: 10vw;
  color: #fff;
  position: absolute;
  left: 50%;
  top: 50%; /* 设置为相对于糖果图片居中 */
  transform: translate(-50%, -50%); /* 水平和垂直居中 */
  transform: translateX(-100%);
  opacity: 0;
  animation: bounce 5s ease forwards;
  line-height: 10; /* 调整行距 */
}
.emotion:nth-child(1) {
  top: -30px; /* 调整每个字符的top值，增加行距 */
}
.emotion:nth-child(2) {
  top: -100px;
}
.emotion:nth-child(3) {
  top: -170px;
}
.emotion:nth-child(4) {
  top: -240px;
}

/* 悬停时显示字符 */
.candy-container:hover .emotion {
  opacity: 1;
  animation: bounce 6s calc(var(--i) * 0.2s) ease-in-out infinite;
}

/* 弹跳动画 */
@keyframes bounce {
  0%,
  100% {
    text-shadow: 0 0 #f3c623, 0 0 #f2aaaa;
  }
  33.33% {
    text-shadow: 0 60px #f37121, 0 120px #f2aaaa;
  }
  50% {
    text-shadow: 0 0 #8fc0a9, 0 0 #84a9ac;
    /* 这个跟刚才写的刚好相反动画到一半向上走自身的一半,逆时针旋转4度 */
    transform: translate(0, -50%) rotate(-4deg);
  }
  66.66% {
    text-shadow: 0 -60px #d54062, 0 -120px #8fc0a9;
  }
}
